template <typename T, glm::qualifier Q>
mat<3, 3, T, Q> adjoint(mat<3, 3, T, Q> const& m) {
	mat<3, 3, T, Q> ret;

	ret[0][0] = + (m[1][1] * m[2][2] - m[2][1] * m[1][2]);
	ret[1][0] = - (m[1][0] * m[2][2] - m[2][0] * m[1][2]);
	ret[2][0] = + (m[1][0] * m[2][1] - m[2][0] * m[1][1]);
	ret[0][1] = - (m[0][1] * m[2][2] - m[2][1] * m[0][2]);
	ret[1][1] = + (m[0][0] * m[2][2] - m[2][0] * m[0][2]);
	ret[2][1] = - (m[0][0] * m[2][1] - m[2][0] * m[0][1]);
	ret[0][2] = + (m[0][1] * m[1][2] - m[1][1] * m[0][2]);
	ret[1][2] = - (m[0][0] * m[1][2] - m[1][0] * m[0][2]);
	ret[2][2] = + (m[0][0] * m[1][1] - m[1][0] * m[0][1]);

	return ret;
}
